<?xml version="1.0" encoding="utf-8"?>
<template>
  <name>mapper</name>
  <filePath>${mapperLocation}</filePath>
  <fileName>${className}Mapper.xml</fileName>
  <content><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${daoPackage}.${className}Mapper">
    <resultMap id="BaseResultMap" type="${entityPackage}.${className}">
    <#list tableColumnList as columnList>
      <#if columnList.columnName == "id">
        <id column="id" jdbcType="BIGINT" property="id" />
      <#else>
	    <result column="${columnList.columnName}" jdbcType="${columnList.mybatisType}" property="${columnList.javaColumnName}" />
	  </#if>
    </#list>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${"$"}{criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${"$"}{criterion.condition} ${"#"}{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${"$"}{criterion.condition} ${"#"}{criterion.value} and ${"#"}{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${"$"}{criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        ${"#"}{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${"$"}{criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${"$"}{criterion.condition} ${"#"}{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${"$"}{criterion.condition} ${"#"}{criterion.value} and ${"#"}{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${"$"}{criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        ${"#"}{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        ${allField}
    </sql>

    <select id="selectByExample" parameterType="${entityPackage}.${className}Example" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ${tableName}
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${"$"}{orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ${tableName}
        where id = ${"#"}{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ${tableName}
        where id = ${"#"}{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="${entityPackage}.${className}Example">
        delete from ${tableName}
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="${entityPackage}.${className}">
        insert into ${tableName} (${insertField})
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <#list insertFieldList as c>
            ${"#"}{${c.javaColumnName},jdbcType=${c.mybatisType}},
        </#list>
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="${entityPackage}.${className}">
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <#list insertFieldList as c>
            ${c.columnName},
        </#list>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <#list insertFieldList as c>
            ${"#"}{${c.javaColumnName},jdbcType=${c.mybatisType}},
        </#list>
        </trim>
    </insert>

    <select id="countByExample" parameterType="${entityPackage}.${className}Example" resultType="java.lang.Long">
        select count(*) from ${tableName}
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update ${tableName}
        <set>
        <#list tableColumnList as c>
            <if test="record.${c.javaColumnName} != null">
                ${c.columnName} = ${"#"}{record.${c.javaColumnName},jdbcType=${c.mybatisType}},
            </if>
        </#list>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update ${tableName}
        set
        <trim  suffixOverrides=",">
        <#list tableColumnList as c>
            ${c.columnName} = ${"#"}{record.${c.javaColumnName},jdbcType=${c.mybatisType}},
        </#list>
        </trim>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="${entityPackage}.${className}">
        update ${tableName}
        <set>
        <#list updateFieldList as c>
            ${c.columnName} = ${"#"}{${c.javaColumnName},jdbcType=${c.mybatisType}},
        </#list>
        </set>
        where id = ${"#"}{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="${entityPackage}.${className}">
        update ${tableName}
        set
        <trim  suffixOverrides=",">
            <#list updateFieldList as c>
              ${c.columnName} = ${"#"}{${c.javaColumnName},jdbcType=${c.mybatisType}},
            </#list>
        </trim>
        where id = ${"#"}{id,jdbcType=BIGINT}
    </update>

</mapper>]]>
  </content>
</template>