<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>entity</name>
	<filePath>src/main/java/${packageName}/${moduleName}/entity/${subModuleName}</filePath>
	<fileName>${table.className}.java</fileName>
	<content><![CDATA[
/**
 *  该类有generator 自动生成
 * Copyright &copy; 2017-2018 All rights reserved.
 */
package ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>;

import com.robust.basic.common.base.BaseEntity;
import com.robust.basic.common.util.excel.ExcelResources;
import java.util.List;
<#list table.importList as i>
import ${i};
</#list>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
public class ${table.className} extends BaseEntity {

	private static final long serialVersionUID = 1L;
	<#-- 生成字段属性 -->
	<#list table.tableColumns as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
			<#-- 父类对象 -->
			<#if table.parentExists && table.parentTableFk == c.name>
	private ${table.parent.className?cap_first} ${c.simpleJavaField};		<#if c.comments??>// ${c.comments} 父类</#if>
			<#-- 其它字段 -->
			<#else>
	private ${c.simpleJavaType} ${c.simpleJavaField};		<#if c.comments??>// ${c.comments}</#if>
			</#if>
		</#if>
	</#list>
	<#-- 范围条件字段 -->
	<#list table.tableColumns as c>
		<#if c.isQuery?? && c.isQuery == "1" && c.queryType == "between">
	private ${c.javaType} begin${c.javaField?cap_first};		<#if c.comments??>// 开始 ${c.comments}</#if>
	private ${c.javaType} end${c.javaField?cap_first};		<#if c.comments??>// 结束 ${c.comments}</#if>
		</#if>
	</#list>
	<#-- 子表列表字段 -->
	<#list table.childList as c>
	private List<${c.className?cap_first}> ${c.className?uncap_first}List = new ArrayList();		// 子表列表
	</#list>

	<#-- 子表列表字段 -->
	<#list table.tableColumns as c>
		<#if c.foreignTableField?? && c.foreignTableField !="" && childModel??>
	private List<${childModel.table.className}> ${childModel.table.className?uncap_first}List;		// 子表列表
		</#if>
	</#list>

	<#-- 构造方法 -->
	public ${table.className}() {
		super();
	}

	<#-- 生成get和set方法 -->
	<#list table.tableColumns as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
			<#list c.simpleAnnotationList as a>
	@${a}
			</#list>
			<#-- 父类对象 -->
			<#if table.parentExists && table.parentTableFk == c.name>
	public ${table.parent.className?cap_first} get${c.simpleJavaField?cap_first}() {
		return ${c.simpleJavaField};
	}

	public void set${c.simpleJavaField?cap_first}(${table.parent.className?cap_first} ${c.simpleJavaField}) {
		this.${c.simpleJavaField} = ${c.simpleJavaField};
	}

			<#-- 其它字段 -->
			<#else>
	public ${c.simpleJavaType} get${c.simpleJavaField?cap_first}() {
		return ${c.simpleJavaField};
	}

	public void set${c.simpleJavaField?cap_first}(${c.simpleJavaType} ${c.simpleJavaField}) {
		this.${c.simpleJavaField} = ${c.simpleJavaField};
	}

			</#if>
		</#if>
	</#list>

	<#-- 范围条件字段get和set方法 -->
	<#list table.tableColumns as c>
		<#if c.isQuery?? && c.isQuery == "1" && c.queryType == "between">
	public ${c.javaType} getBegin${c.javaField?cap_first}() {
		return begin${c.javaField?cap_first};
	}

	public void setBegin${c.javaField?cap_first}(${c.javaType} begin${c.javaField?cap_first}) {
		this.begin${c.javaField?cap_first} = begin${c.javaField?cap_first};
	}

	public ${c.javaType} getEnd${c.javaField?cap_first}() {
		return end${c.javaField?cap_first};
	}

	public void setEnd${c.javaField?cap_first}(${c.javaType} end${c.javaField?cap_first}) {
		this.end${c.javaField?cap_first} = end${c.javaField?cap_first};
	}

		</#if>
	</#list>
	<#-- 子表列表get和set方法 -->
	<#list table.childList as c>
	public List<${c.className?cap_first}> get${c.className?cap_first}List() {
		return ${c.className?uncap_first}List;
	}

	public void set${c.className?cap_first}List(List<${c.className?cap_first}> ${c.className?uncap_first}List) {
		this.${c.className?uncap_first}List = ${c.className?uncap_first}List;
	}
	</#list>

	<#-- 子表列表字段 -->
	<#list table.tableColumns as c>
		<#if c.foreignTableField?? && c.foreignTableField !="" && childModel??>
	public List<${childModel.table.className}> get${childModel.table.className?cap_first}List() {
		return ${childModel.table.className?uncap_first}List;
	}

	public void set${childModel.table.className?cap_first}List(List<${childModel.table.className}> ${childModel.table.className?uncap_first}List) {
		this.${childModel.table.className?uncap_first}List = ${childModel.table.className?uncap_first}List;
	}
		</#if>
	</#list>
}]]>
    </content>
</template>